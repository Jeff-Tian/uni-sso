@startuml
class SQLEvents implements ICreateEvent {
    +id: string
    +style: string
    +displayName: string
    +products: string[]
    +isEnabled: boolean
    +feedBackgroundImageUrl?: string
    +eventOpensAt: Date
    +eventClosesAt: Date
    +countdownStartsAt: Date
    +registrationOpensAt: Date
    +registrationClosesAt: Date
    +extendedRegistrationEnabled: boolean
    +sendReminderNotificationAt?: Date
    +reminderNotificationsSent: boolean
    +drawStartsAt: Date
    +drawEndedAt?: Date
    +channels: string[]
    +minIosVersion?: string
    +minAndroidVersion?: string
    +createdAt?: Date
    +updatedAt?: Date
    +trackingUrls?: any[]
    +translations?: any
    +postToFeed?: boolean
    +lastReport?: any
    +lastReportCreationDate?: Date
    +requiresExtendedVerification: boolean
    +type: enum
    +isPlpEnabled: boolean
    +npsSurveyEnabled: boolean
    +feedImageUrls: any[]
    +plpImageUrls: any[]
    +pdpDrawMessageKey?: string
    +requiresBoostScore: boolean
    +restrictions?: any[]
    +loserNotificationStatus?: enum
    +selectionStrategy: enum
    +segmentSimulation?: any
    +lastSegmentSimulationCreationDate?: Date
    +segments: any[]
}
SQLEvents --> SQLEventSegments
class SQLParticipation implements Participation {
    +id: number
    +riskScore?: number
    +dynamicsScore?: number
    +cancelScore?: number
    +returnScore?: number
    +cancellationRate?: number
    +returnRate?: number
    +manualScore?: number
    +randomFactor?: number
    +score?: number
    +penalty?: number
    +memberTier?: number
    +dynamicsMemberId?: string
    +lost: boolean
    +loserNotificationSent?: boolean
    +reminderNotificationSent?: boolean
    +displaySize?: string
    +eventId: string
    +sku: string(20)
    +countryCode: string(2)
    +languageCode: string(2)
    +userId: string(40)
    +status: enum
    +probablyFraudulent: boolean
    +originalScore: number
    +orderedAt?: Date
    +registeredAt?: Date
    +paymentTransactions: any[]
    +order: any
    +storedAuthorizationPaymentResponse?: any
    +storedRedirectPaymentResponse?: any
    +orderId?: string
    +basketId?: string
    +scoredAt?: Date
    +paymentErrorMessage?: string
    +paymentFailureCategory?: enum
    +memberId?: string
    +itemId?: string
    +productId: string
    +subOrdinate?: string
    +inventoryId?: string
    +orderCancellationReason?: any
    +channel: enum
    +keyCity?: enum
    +pendingStockReserved: boolean
    +userIPAddress?: string(45)
    +userDeviceInfo?: any
    +anonymised: boolean
    +additionalDataFetched: boolean
    +dryRunStatus?: enum
}
class SQLUserActivity implements UserActivity {
    +id: number
    +userId: string(40)
    +counter: number
    +updatedAt: Date
}
class SQLUserRisk implements UserRisk {
    +userId: string
    +memberId?: string
    +lastUpdated: Date
    +risk: enum
    +reason?: string
}
@enduml