language: node_js
node_js:
  - 11.10.0
services:
  - docker
  - mongodb
  - postgresql
install:
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - mkdir ${HOME}/.kube
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - npm i
  - npm i -g k8ss
  - echo -e "machine github.com\n  login $GH_TOKEN" > ~/.netrc
  - git clone https://github.com/Jeff-Tian/k8s-config.git ${HOME}/k8s-config
cache:
  directories:
    - node_modules
env:
  ci: true
before_install:
#  - psql -c 'create database df1aqs65o6mn0e;' -U postgres
  - psql -U postgres < data/init.sql
before_script:
  - echo "before script..."
  - curl https://downloads.dockerslim.com/releases/1.29.0/dist_linux.tar.gz | tar xvz
  - mv dist_linux docker-slim
  - ls docker-slim
  - sleep 9
  - mongo mydb_test --eval 'db.createUser({user:"travis",pwd:"test",roles:["readWrite"]});'
script:
  - npm test
  - echo "KEYCLOAK_CLIENT_SECRET = ${KEYCLOAK_CLIENT_SECRET}" >> config/test.env
  - npm run test:e2e
  - npm run build
  - docker build -t "$DOCKER_USERNAME"/uni-sso .
  - docker images
  - docker run -d -p 127.0.0.1:3000:3000 --name uni-sso "$DOCKER_USERNAME"/uni-sso
  - docker ps | grep -q uni-sso
  - docker ps -aqf "name=uni-sso$"
  - docker push "$DOCKER_USERNAME"/uni-sso
  - docker logs $(docker ps -aqf name=uni-sso$)
  - curl localhost:3000 || docker logs $(docker ps -aqf name=uni-sso$)
  - curl -X POST localhost:3000/auth/login -d '{"username":"john","password":"changeme"}' -H "Content-Type:application/json" || docker logs $(docker ps -aqf name=uni-sso$)
  - docker kill uni-sso || echo "uni-sso killed"
  - docker rm uni-sso || echo "uni-sso removed"
  - docker-slim/docker-slim build "$DOCKER_USERNAME"/uni-sso
  - docker images
  - docker run -d -p 127.0.0.1:3000:3000 --name uni-sso.slim "$DOCKER_USERNAME"/uni-sso.slim
  - docker ps | grep -q uni-sso.slim
  - docker push "$DOCKER_USERNAME"/uni-sso.slim
  - curl localhost:3000 || docker logs $(docker ps -aqf name=uni-sso\.slim$)
  - curl -X POST localhost:3000/auth/login -d '{"username":"john","password":"changeme"}' -H "Content-Type:application/json" || docker logs $(docker ps -aqf name=uni-sso\.slim$)

  # - sh .travis/replace-deployment-linux.sh

  - k8ss switch --cluster=kubesail --namespace=jeff-tian
  - kubectl apply -k inf/prod
  - kubectl -n jeff-tian rollout restart deployment uni-sso
  - k8ss switch --cluster=okteto --namespace=jeff-tian
  - kubectl apply -k inf
  - kubectl -n jeff-tian rollout restart deployment uni-sso
  - sh .travis/trigger-assertible.sh
deploy:
  - provider: script
    skip_cleanup: true
    script: .travis/deploy-kubesail.sh
    on:
      branch: master
  - provider: script
    skip_cleanup: true
    script: .travis/deploy-okteto.sh
    on:
      branch: fastify
  - provider: heroku
    skip_cleanup: true
    app: uni-sso
    on:
      branch: fastify
    api_key:
      secure: vu1al+pwcEGjz1OxHTLpNgWjOExvALAYK2gLYgpP5AWWY0uW1Y9o5yjOC1a0OO+lbmzaINGEbSETWfMmw9T8186RCcQjcs49yABH5RbCyCI/xGCUfWRgzPdncI4Mlcg+WXDd/iA534zUxxy9nhnJbGfTwwUBWMiLMsmhM1WRtnULdxdp1nJ00qFX06xYDw3g/hAHAswwKzWofMWTEDvcumj0buDgJsaRBy53H9VWzLlpn+B+nnyjva0xdL1Ra4iFRqN/8kM96y3uwoiH//4exARM56crXwNFKk0zL9orPt7ouw0OznE/49j298ycSleDizs4hgOwNbrGek+FFF0aCgVvVpq1mXj840mXDsPSU8KK9dNHeaTxjVGyk8+YnJKSO9WLDsJxpODZi4u0AZBE7N4zSCQS3WQxBPyUA3hU/jxNrTwzDE7wotLzGCu1yTidJwBRYHKTlo/OUa2gjvDA+bB2Xmb6xuDutTiYQiiHYGoMN3vn6yPlx1/pJYJRuQe3cFr6+E5SErL06+3V4ZxkVo1TY153PnaGD//1u1xkPbFH8TNJjET9HKEZ/p96SmcLZ+ls+kHCwgSX2cqUcmn+U9H9ySHld6kJm1bhVElK0JPFzzSax07lFrXcsXcdhZksWsvC5wx38a0s3Y8aLCk7WkAyYBS6Eu9VYST8rdsr14c=

